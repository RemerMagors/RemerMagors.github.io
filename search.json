[{"title":"Hello World","url":"/archives/16107/","content":"\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n```bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n```bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n```bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n```bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"},{"title":"C语言初识之猜数游戏","url":"/archives/26716/","content":"\n转入自动化专业之后以后的学习会用到C语言，本来自动化专业大一就学过 ***《C语言程序设计》*** ，所以我需要对这一门课程进行补修。刚好我也对这方面感兴趣，顺便提前学习了一点点，现在我自学的基本都是看菜鸟教程和一点点实践出来的。突发奇想写个猜数字的游戏，很简陋，只有命令行界面。这个文章简要记录了我这个程序的变化及想法的实现。\n\n我刚开始是只写了能运行一次的，也就是下面这个流程，但是玩完一次还得再去运行，不能直接再次开始游戏，想再玩的话很麻烦，还得再打开一次。然后就想办法让他能再次运行，我的想法是通过一个`while`循环来实现，先定义了循环变量`r`并初始化为2，然后输出 **游戏开始[1]** 和 **退出选项[2]** 引导玩家去输入选择开始或者退出游戏，当输入`1`就开始游戏，这里直接选择了小于等于1开始循环。然后初始化 **随机数发生器** ，从1-100选择一个数作为这次游戏的答案，定义并初始化用于记录尝试次数的变量`n = 1`，因为就算第一次输入正确也是尝试了1次，定义用于玩家输入的变量`x`，告知游戏规则，由玩家输入数字，输入不等于答案时告知大小关系，变量`n`加1，告知玩家再次尝试，这是为了玩家清楚现在的状态，不是死机。当输入等于答案时退出这层循环，然后输出尝试次数和正确答案，询问是否再玩一次，再次由玩家输入到变量`r`\n\n```mermaid\n---\nconfig:\n    theme: neutral\n    layout: dagre\n\n---\nflowchart TD\n    A[\"猜数游戏\"]\n    answer[\"随机生成答案\"]\n    input[\"输入\"]\n    false[\"记录尝试次数，告知与答案大小关系\"]\n    true[\"输出尝试次数，正确答案\"]\n    stop[\"结束游戏\"]\n    A -->|告知规则| answer\n    answer --> input\n    input --> |猜错| false\n    input --> |猜对| true\n    false --> input\n    true --> stop\n```\n\n修改后的流程图和代码是这样的，算是一个很简单的小游戏了\n\n```mermaid\n---\nconfig:\n  theme: neutral\n  layout: dagre\n\n---\nflowchart TD\n    A[\"猜数游戏\"] -->|输入1| C(\"随机生成答案\")\n    A -->|输入2| D(\"结束游戏\")\n    C --> E(\"猜数\")\n    E -->|猜对| F(\"尝试次数，正确答案\")\n    E -->|猜错| G(\"告知与答案大小关系\")\n    G -->|记录尝试次数| E\n    F --> A\n    R(告知规则) --> A\n```\n\n\n\n```c\n#include <stdio.h>\n#include <time.h>\n#include <stdlib.h>\nint main()\n{\n    int r = 2;\n    printf(\"\\tGuess NUMBER game\\t\\n\\n\\t    [1]Start\\t\\n\\n\\t    [2]EXIT\\t\\n\");\n    scanf(\"%d\", &r);\n    while( r <= 1 ) // 开始游戏\n    {\n        srand((unsigned int)time(NULL));\n        int answer = rand() % 101 + 1; // 从1-100随机选取一个数字\n        int x = 0;\n        int n = 1; // 用于记录尝试次数的变量\n        printf(\"\\tGuess a NUMBER from 1 to 100\\t\\n\\nI'll tell you whether IT is bigger or smaller\\nin comparison with the NUMBER i selected\\n\\n\");\n        printf (\"Enter Your ANSWER: \");\n        scanf(\"%d\", &x);\n        while(x != answer) // 猜错开始循环\n        {\n            if(x < answer) // 输入小于答案\n            {\n                printf(\"Your answer is Smaller\\n\");\n            }\n            else // 输入大于答案\n            {\n                printf(\"Your answer is Bigger\\n\");\n            }\n            printf(\"Try again: \");\n            n++;\n            scanf(\"%d\", &x);\n        }\n        printf(\"You've tried %d times, the Answer is %d\\n\", n, answer);\n        printf(\"[1] PLAY AGAIN\\n[2] EXIT.....\\n\");\n        scanf(\"%d\", &r);\n    }\n    return 0;\n}\n```\n\n在 ***《软件技术基础》*** 这门刚开始学的课程中老师讲的算法的**时间复杂度**，讲了**大O表示法（Big O Notation）**，举了一些例子\n\n- **O(1) 常数时间**\n- **O(log n) 对数时间**\n- **O(n) 线性时间**\n- **O(n log n) 线性对数时间**\n- **O(n^2) 平方时间**\n- **O(2^n) 指数时间**\n- **O(n!) 阶乘时间**\n  现在我还是不会算一些循环的时间复杂度\n","categories":["note"]},{"title":"金工实习","url":"/archives/15058/","content":"\n我在大二转入了自动化专业，金工实习对我来说不单是一门课程，因为我对机械加工这一块非常感兴趣，这种兴趣应该是从小时候玩玩具可拆东西开始的。\n\n一次一次的拆卸组装玩具和一些电器让我想自己动手去做一些东西，家中凡是买来的玩具和一些容易拆卸的电器，无一是没有被我拆过的。最早的大概是玩具枪，记得小时候玩的五块钱一个的玩具手枪有点劣质但是威力并不算小，有个缺点就是气缸和扳机之间的部分容易变形，导致玩具枪报废，还找不到单卖气缸和扳机的，我就想着能不能把气缸和扳机换成金属部件。延长玩具枪的使用寿命。\n\n大二终于有了尝试机械加工的机会，每节金工实习我都听的很认真，操作也是非常上心，争取操作机会，目前金工实习才上了一点，所有实践内容大概就是下面这些\n\n- **[车工](#1)**\n\n- **[3D打印](#2)**\n\n- **钳工**\n\n- **激光**\n\n- **铸造**\n\n- **锻压**\n\n- **焊接**\n\n- **铣削**\n\n### **车工**<a id = \"1\"></a>\n\n先学的就是车工，我们学了普通卧式车床和数控车床的基本操作。**普通卧式车床**的操作，我们课上用的是塑料件，第一节课是老师讲完车床的基本操作之后给演示车一个小阶梯轴，在第一节课老师就给了我们组操作机会，我感觉很幸运。第二次去上课就是让我们每个组都车那个演示的小阶梯轴，第一次是我们三个人每人操作一步，但是车出之后零件的误差很大，能差上个2毫米还多。我们分析了其中的原因，应该是每次往里进刀的时候都重新读数导致的误差。\n\n当时时间还很充足，我提出一个人单独车一个零件。我是第一个操作的，这次我从刚开始读数后一直加着数算，没有重新读数，车好零件之后用游标卡尺测量，肉眼看到零刻度线是正对着主尺上的刻度线的，误差很小，但是后面的那个倒角没有车。这次没有在工料上划线，导致车出来的边缘有点翘边，这次还忘了车端面。\n\n**数控车床**实操的东西不多，学习了简单的对刀，还了解了一点编程。不过刚开始看到数控车床的时候看到操作面板上那么多的按钮真的不知所措，最后只是演示了一下一个工件的加工，并没有让我们实际动手去操作。\n\n### **3D打印**<a id = \"2\"></a>\n\n这个恰逢国庆假期调课，是早上八点的课，我一觉醒来已经八点十几了，匆匆忙忙赶到教室去上课，差点以为要完蛋了，因为金工实习不让我们迟到。不过老师很好，给了我机会，让我签到了。第一节课我们讲的是CATIA建模，教了一些基本操作，好在我之前在SolidWorks里面学习建模吊钩的时候都学过了这些简单的基本操作。\n\n第二次去教室让我们每人带一个U盘，存放我们自己建的模型，下节课用于打印。下午去了3D打印实训室，我中午挑时间学着建模了CS2的骷髅匕首，我感觉这把刀的设计很有美感，想打印出来玩一玩。但是打印的时候总是先两边翘边，然后就从底板上脱落了，试了好多次都不行，就让别人先打印了，结果我们这台机器到最后只有一个底面是圆的成功了。\n\n<img src=\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEDHPZo36dvn0yOP782SvegFq0UCCN0oAACFh0AAmyk-FbOgg7t1iS9ZjYE.png\" title=\"\" alt=\"\" data-align=\"center\">\n\n<img title=\"\" src=\"https://img.remit.ee/api/file/BQACAgUAAyEGAASHRsPbAAEDHPlo36gIgtOQasiCCTjTbTYHQWVULQACGR0AAmyk-FYLOtJJiHfI9TYE.png\" alt=\"\" data-align=\"center\">\n\n下节课尝试一下立着打印，把与底板的接触面积减小，减小因温度降低的收缩量\n","categories":["note"]}]